
// Euler sieve for prime numbers
// This is a break/continue bug sample code

var mut ptr = 0;
var prime = [ 1000000; 0];
var is_prime = [ 1000000; true];

fun calc_prime(n) {
    for (var mut i = 2; i <= n; i = i + 1) {
        if (is_prime[i] == true) {
            prime[ptr] = i;
            ptr = ptr + 1;
        }
        for (var mut j = 0; j < ptr; j = j + 1) {
            var nn = i * prime[j];
            if (nn > n)
                break;
            is_prime[nn] = false;
            if (i % prime[j] == 0)
                break;
        }
    }
}

var start = clock();
calc_prime(100000);
for (var mut i = 0; i < ptr; i = i + 1)
    println(prime[i]);
print "time consumed: ";
println clock() - start;